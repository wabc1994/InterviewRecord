## 快慢指针

常见的解题套路就是构造一个假的头结点先，然后进行一个判断

主要有两个做法
- [287. Find the Duplicate Number](https://leetcode.com/problems/find-the-duplicate-number/discuss/72846/My-easy-understood-solution-with-O(n)-time-and-O(1)-space-without-modifying-the-array.-With-clear-explanation.)

- [142. Linked List Cycle II]()
## 删除类型的题目
前后两个节点的情况pre current
  
  要记住无论什么情况
  
  遍历current的话肯定是逐个遍历
   
   所以一定会经历这个过程 
   current = current.next
   
   
   **至于需不需要删除，则是根据中间节点**
   - pre.next  = current.next(删除)
   - pre = current;(不需要删除)
   - [203. Remove Linked List Elements](https://leetcode.com/problems/remove-linked-list-elements/description/)
  
- [回文字符串和链表reverse](https://leetcode.com/problems/palindrome-linked-list/discuss/64501/Java-easy-to-understand)
   -[解法](https://mp.csdn.net/mdeditor#)